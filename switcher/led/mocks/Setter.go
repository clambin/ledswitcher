// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Setter is an autogenerated mock type for the Setter type
type Setter struct {
	mock.Mock
}

// GetLED provides a mock function with given fields:
func (_m *Setter) GetLED() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// SetLED provides a mock function with given fields: state
func (_m *Setter) SetLED(state bool) error {
	ret := _m.Called(state)

	var r0 error
	if rf, ok := ret.Get(0).(func(bool) error); ok {
		r0 = rf(state)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewSetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewSetter creates a new instance of Setter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSetter(t mockConstructorTestingTNewSetter) *Setter {
	mock := &Setter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
