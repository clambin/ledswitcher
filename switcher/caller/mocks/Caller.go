// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Caller is an autogenerated mock type for the Caller type
type Caller struct {
	mock.Mock
}

// Register provides a mock function with given fields: leaderURL, clientURL
func (_m *Caller) Register(leaderURL string, clientURL string) error {
	ret := _m.Called(leaderURL, clientURL)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(leaderURL, clientURL)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetLEDOff provides a mock function with given fields: targetURL
func (_m *Caller) SetLEDOff(targetURL string) error {
	ret := _m.Called(targetURL)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(targetURL)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetLEDOn provides a mock function with given fields: targetURL
func (_m *Caller) SetLEDOn(targetURL string) error {
	ret := _m.Called(targetURL)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(targetURL)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewCaller interface {
	mock.TestingT
	Cleanup(func())
}

// NewCaller creates a new instance of Caller. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCaller(t mockConstructorTestingTNewCaller) *Caller {
	mock := &Caller{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
